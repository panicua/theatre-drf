services:
  theatre_app:
    container_name: theatre-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./:/theatre_app
    env_file:
      - .env
    command: > 
      sh -c "python manage.py wait_for_db_script && 
      python manage.py migrate && 
      python manage.py flush --no-input &&
      python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
    networks:
      - my_network


  telegram_bot:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: >
      sh -c '[ -z "$TELEGRAM_TOKEN" ] || python telegram_bot/bot.py'
    depends_on:
      - theatre_app
    networks:
      - my_network

  db:
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - db:$PGDATA
    networks:
      - my_network

volumes:
  db:

networks:
  my_network:
    driver: bridge
